//generic imports
importClass(Packages.ij.IJ);
importClass(Packages.ij.plugin.frame.RoiManager);
importClass(Packages.ij.gui.GenericDialog);
//generic image variable assignment
imp = IJ.getImage();
ip = imp.getProcessor();
//recursive bounding box function
function recursiveSelect(startX, startY) {
    //create dialog box
    if (startX == null || startY == null) {
        title = "Enter point";
        y=imp.height/2; x=imp.width/2;
        gd = new GenericDialog("Example Dialog");
        gd.addNumericField("X:", x);
        gd.addNumericField("Y:", y);
        gd.showDialog();
        x = gd.getNextNumber();
        y = gd.getNextNumber();
    } else {
        x = startX;
        y = startY;
    }
    pixelValue = ip.getPixel(x, y)
    if (pixelValue != 255) {
        IJ.log(imageIndex(i) + " pixel was not white " + ip.getWidth());
        return;
    }
    IJ.log(imageIndex(i) + " pixel was white " + ip.getWidth());
    for (ix, ix < ip.getWidth(), ix++);
        if (ip.getPixel(x+ix, y) == 255) {
            width += ix;
            break;
        }
    }
    for (ix, ix < ip.getWidth(), ix++){
        if (ip.getPixel(x-ix, y) == 255) {
            width += ix;
            break;
        }
    }
}
//function to output image index number to append to log message
function imageIndex(number){
    return[Math.floor(number / 12), Math.ceil(((number % 12) + 1) / 2), ((number % 12) % 2) + 1, number + 1];
}
// Initialize points array
var roi = imp.getRoi();
if (roi == null || !(roi instanceof PointRoi)) {
    IJ.error("Please use the multi-point tool to select starting points.");
}
points = roi.getContainedPoints(); // Returns an array of points [{x: ..., y: ...}, ...]
//aprogram loop
if (points.length === 0) {
    IJ.error("No valid multi-point selections found.");
} else {
    for (i = 0; i < points.length; i++) {
        startX = points[i].x, startY = points[i].y;
        recursiveSelect(startX, startY);
    }
}
